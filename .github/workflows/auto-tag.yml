name: Auto Tag on Version Change

on:
  push:
    branches:
      - main
    paths:
      - 'prunarr/__init__.py'

permissions:
  contents: write

jobs:
  auto-tag:
    runs-on: ubuntu-latest

    steps:
      # Generate GitHub App token to trigger downstream workflows
      # Using GITHUB_TOKEN would NOT trigger docker.yml, helm.yml, or publish.yml
      # See: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#using-the-github_token-in-a-workflow
      - name: Generate GitHub App token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate-token.outputs.token }}

      - name: Extract version from __init__.py
        id: version
        run: |
          VERSION=$(grep -oP '__version__ = "\K[^"]+' prunarr/__init__.py)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tag=v${VERSION}" >> $GITHUB_OUTPUT
          echo "Found version: ${VERSION}"

      - name: Check if tag already exists
        id: check_tag
        run: |
          if git rev-parse "v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "⚠️  Tag v${{ steps.version.outputs.version }} already exists, skipping"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "✅ Tag v${{ steps.version.outputs.version }} does not exist, will create"
          fi

      - name: Create and push tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"
          echo "✅ Created and pushed tag v${{ steps.version.outputs.version }}"
          echo "🚀 This will trigger PyPI, Docker, and Helm release workflows"
