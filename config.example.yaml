# PrunArr Configuration Example
# Copy this file to config.yaml and update with your actual API credentials
# Keep your config.yaml file secure and do not commit it to version control

# Required API Credentials
# Get these from your respective application settings

radarr_api_key: "your-radarr-api-key-here"
radarr_url: "https://radarr.yourdomain.com"

sonarr_api_key: "your-sonarr-api-key-here"
sonarr_url: "https://sonarr.yourdomain.com"

tautulli_api_key: "your-tautulli-api-key-here"
tautulli_url: "https://tautulli.yourdomain.com"

# Optional: Customize user tag pattern (default works for most setups)
# This regex pattern extracts usernames from Radarr/Sonarr tags
# Default pattern expects tags like "123 - username"
user_tag_regex: "^\\d+ - (.+)$"

# Example custom patterns:
# user_tag_regex: "^user:(.+)$"           # For tags like "user:john_doe"
# user_tag_regex: "^\\[(.+)\\]$"          # For tags like "[john_doe]"
# user_tag_regex: "^req_by_(.+)$"         # For tags like "req_by_alice"

# Cache Configuration (Optional)
# Caching significantly improves performance for large libraries
cache_enabled: true                    # Enable/disable caching (default: true)
# cache_dir: ~/.prunarr/cache          # Custom cache directory (default: ~/.prunarr/cache)

# Cache TTL (Time To Live) in seconds
# Adjust these based on how often your data changes
cache_ttl_movies: 3600                # Radarr movies (default: 1 hour)
cache_ttl_series: 3600                # Sonarr series (default: 1 hour)
cache_ttl_history: 300                # Tautulli history (default: 5 minutes)
cache_ttl_tags: 86400                 # Tags (default: 24 hours)
cache_ttl_metadata: 604800            # IMDB/TVDB metadata (default: 7 days)

# Cache size limit
cache_max_size_mb: 100                # Maximum cache size in MB (default: 100 MB)

# Logging Configuration
# Default log level is ERROR (only shows errors)
# Set to INFO to see general operational messages
# Set to DEBUG for detailed troubleshooting (or use --debug flag)
log_level: ERROR                      # Log level: DEBUG, INFO, WARNING, ERROR (default: ERROR)

# Streaming Provider Configuration (JustWatch Integration)
# Enable this to filter content based on streaming availability
streaming_enabled: false              # Enable streaming provider checks (default: false)
streaming_locale: "en_US"             # Locale for JustWatch queries (language_COUNTRY format)
streaming_providers:                  # List of streaming provider technical names
  - "nfx"                             # Netflix
  - "amp"                             # Amazon Prime Video
  - "dnp"                             # Disney+
  - "hlu"                             # Hulu
  # Add more providers as needed - use "prunarr providers list" to see all available

# Cache TTL for streaming data
cache_ttl_streaming: 86400            # Streaming availability cache (default: 24 hours)

# Common Provider Technical Names:
# - nfx: Netflix              - hbm: HBO Max
# - amp: Amazon Prime Video   - apl: Apple TV+
# - dnp: Disney+              - pcv: Paramount+
# - hlu: Hulu                 - shw: Showtime
# - stz: Starz                - crv: Crunchyroll

# Note: PrunArr uses command-line parameters for operational settings
# The --days-watched parameter controls retention periods
# Examples:
#   prunarr movies remove --days-watched 60    # Remove movies watched 60+ days ago
#   prunarr series remove --days-watched 90    # Remove series watched 90+ days ago
#
# Cache Management:
#   prunarr cache init       # Quick init - cache movies, series, history, tags
#   prunarr cache init --full # Full init - also pre-fetch all episodes (slower)
#   prunarr cache status     # Show cache statistics
#   prunarr cache clear      # Clear cached data
#   prunarr cache refresh    # Refresh cached data
#
# Cache Behavior:
#   - Default mode: Fast initialization, episodes cached on-demand when first accessed
#   - Full mode (--full): Pre-fetches everything including all episodes (slower init, instant everywhere)
#   - On-demand: Individual series details and episodes are cached automatically when accessed
#
# Best Practice:
#   - Use default 'cache init' for quick setup (recommended)
#   - Use 'cache init --full' if you want everything pre-cached (takes longer)